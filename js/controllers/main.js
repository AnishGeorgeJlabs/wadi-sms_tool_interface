// Generated by CoffeeScript 1.9.3
(function() {
  angular.module('Wadi.controllers.main', []).controller('MainCtrl', function($scope, $state, $http, $log, wdLinks, wdInterfaceApi) {
    var isLoggedIn;
    $log.debug("Main executed");
    $state.go('login');
    isLoggedIn = false;
    $scope.checkLogin = function() {
      return isLoggedIn;
    };
    $scope.sheet_link = wdLinks.scheduling_sheet;
    $scope.doc_link = wdLinks.docs;
    $scope.login = function(username, pass) {
      $log.debug("Got submission " + username + ", " + pass);
      return $http.post(wdInterfaceApi.login, {
        username: username,
        password: pass
      }).success(function(result) {
        $log.debug("Got result: " + (JSON.stringify(result)));
        isLoggedIn = result.success;
        if (isLoggedIn) {
          return $state.go('dashboard');
        } else {
          return alert("Authentication failed");
        }
      });
    };
    $scope.isState = function(statename) {
      return $state.is(statename);
    };
    return $scope.goTo = function(statename) {
      return $state.go(statename);
    };
  }).controller('LoginCtrl', function($scope, $log) {
    $scope.data = {
      username: '',
      password: ''
    };
    return $scope.submit = function() {
      $log.debug("Submitting : " + (JSON.stringify($scope.data)));
      $scope.$parent.login($scope.data.username, md5($scope.data.password));
      $scope.data.username = '';
      return $scope.data.password = '';
    };
  }).controller('TestCtrl', function($scope, $state, wdConfirm, $log, wdToast, wdLinks, $modal, Upload, wdBlockApi, wdSegment) {
    $scope.submit = function() {
      if ($scope.file && !$scope.file.$error) {
        return $scope.upload($scope.file);
      }
    };
    $scope.upload = function(file) {
      return Upload.upload({
        url: wdBlockApi.upload,
        file: file
      }).progress(function(evt) {
        var progPerc;
        progPerc = parseInt(100.0 * evt.loaded / evt.total);
        return $log.info("Progress: " + progPerc + "% " + evt.config.file.name);
      }).success(function(data) {
        return $log.info("Got result: " + JSON.stringify(data));
      });
    };
    $scope.openConfirm = function() {
      return wdConfirm("Test send", "Can you get this correctly?").then(function(res) {
        return $log.debug("Modal result: " + res);
      });
    };
    $scope.openStatic = function() {
      return wdSegment({
        id: {
          $oid: "blah blah"
        },
        count: 34152,
        t_id: 60
      }, true);
    };
    $scope.toast = function() {
      return wdToast("Title", "message", "info");
    };
    $scope.hierInput = {
      name: '',
      pName: 'Select Category',
      co_type: 'both',
      valueObj: {
        Electronics: ['Electroni Accessories', 'Some other Subcat'],
        Fashion: ['Vero Moda', 'Another Fashion brand', 'Some damn hot shoes'],
        Home: ['Home Decor', 'Furniture', 'Bed', 'Sofas']
      }
    };
    return $scope.hierOutput = {
      value: [],
      co_type: 'required'
    };
  });

}).call(this);

//# sourceMappingURL=main.js.map
