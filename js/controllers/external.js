// Generated by CoffeeScript 1.9.3
(function() {
  angular.module('Wadi.controllers.external', []).controller('ExternalDataCtrl', function($state, $log, $scope, wdInterfaceApi, $interval, $http, wdExternalSegment, wdToast, wdConfirm) {
    var cancelJob, periodicRefresh, refresh;
    if (!$scope.$parent.checkLogin()) {
      $state.go('login');
    }
    $scope.data = [];
    $scope.unsegmented_count = 0;
    refresh = function() {
      return $http.get(wdInterfaceApi.segment_jobs_external).success(function(data) {
        if (data.success) {
          $scope.data = data.data;
          return $scope.unsegmented_count = data.unsegmented;
        } else {
          return $log.debug("Didn't get correct data for external jobs");
        }
      });
    };
    refresh();
    periodicRefresh = $interval(function() {
      return refresh();
    }, 10000);
    $scope.$on("$destroy", function() {
      return $interval.cancel(periodicRefresh);
    });
    $scope.createSegments = function() {
      var init_seg;
      init_seg = _.last($scope.data).segment_number + 1;
      return wdExternalSegment.new_segments($scope.unsegmented_count, init_seg).then(function(res) {
        if (res) {
          return wdToast("Segmentation Request", "Your segmentation request has been processed successfully", 'success');
        } else {
          return wdToast("Segmentation Request", "An Error has occurred during segmentation", 'error');
        }
      });
    };
    $scope.scheduleJob = function(seg_num) {
      if (seg_num) {
        return wdExternalSegment.old_segment(seg_num).then(function(res) {
          if (res) {
            return wdToast("Job Scheduling", "The job has been successfully scheduled", 'success');
          } else {
            return wdToast("Segmentation Request", "An Error has occurred during the request", 'error');
          }
        });
      }
    };
    $scope.confirmAndCancelJob = function(segment_number, job_number) {
      return wdConfirm("Confirm cancellation", "Are you sure you want to cancel Segment #" + segment_number + ", Job #" + (job_number + 1) + "?").then(function(res) {
        if (res) {
          return cancelJob(segment_number, job_number);
        }
      });
    };
    return cancelJob = function(segment_number, job_number) {
      return $http.post(wdInterfaceApi.cancel_job, {
        segment_number: segment_number,
        job_number: job_number
      }).success(function(data) {
        if (data.success) {
          wdToast("Cancellation", "The requested job has been cancelled successfully", "info");
          return refresh();
        }
      });
    };
  });

}).call(this);

//# sourceMappingURL=external.js.map
