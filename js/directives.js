// Generated by CoffeeScript 1.9.3

/*
  Works like a charm :D
  Tested on Sat, 15 Aug, 06:44 PM
 */

(function() {
  angular.module('Wadi.directives', []).directive('wdCoTypeSelect', function() {
    return {
      restrict: 'E',
      scope: {
        model: '=model'
      },
      templateUrl: './templates/directives/dir_co_type.html'
    };
  }).directive('wdRangeInput', function() {
    return {
      restrict: 'E',
      scope: {
        label: '=label',
        model: '=model',
        showCoType: '=showCoType'
      },
      templateUrl: './templates/directives/dir_range.html',
      replace: true,
      controller: function($scope, $log) {
        var compileResult;
        $scope.lt = "Less than";
        $scope.eq = "Equal to";
        $scope.gt = "More than";
        $scope.bw = "Between";
        $scope.data = {
          op: '',
          min: 1,
          max: 2
        };
        compileResult = function() {
          return $scope.model.value = (function() {
            switch ($scope.data.op) {
              case '':
                return '';
              case $scope.bw:
                return $scope.bw + " " + $scope.data.min + " and " + $scope.data.max;
              case $scope.eq:
                return "" + $scope.data.min;
              default:
                return $scope.data.op + " " + $scope.data.min;
            }
          })();
        };
        $scope.$watchCollection('data', function(nVal, oVal) {
          if (nVal.min !== oVal.min && nVal.min !== null && nVal.min >= nVal.max) {
            $scope.data.max = $scope.data.min + 1;
          }
          if (nVal.max !== oVal.max && nVal.max !== null && nVal.max <= nVal.min) {
            $scope.data.min = $scope.data.max - 1;
          }
          return compileResult();
        });
        $scope.$watch('model.value', function(nVal, oVal) {
          if (oVal !== '' && nVal === '') {
            return $scope.data.op = '';
          }
        });
        return $scope.recover = function() {
          if ($scope.data.min === null || $scope.data.min <= 0) {
            $scope.data.min = 1;
          }
          if ($scope.data.max === null) {
            return $scope.data.max = $scope.data.min + 1;
          }
        };
      }
    };
  }).directive('wdSelect', function() {
    return {
      restrict: 'E',
      scope: {
        inputModel: '=inputModel',
        outputModel: '=outputModel',
        singleSelect: '=singleSelect'
      },
      templateUrl: './templates/directives/dir_select.html',
      replace: true,
      controller: function($scope, $log) {
        $scope.options = [
          {
            name: 'option'
          }
        ];
        $scope.$watchCollection('inputModel', function(nVal, oVal) {
          $scope.options = _.map(nVal.values, function(v) {
            var res;
            res = {
              name: v
            };
            if (($scope.singleSelect && $scope.outputModel.value === v) || _.contains($scope.outputModel.value, v)) {
              res.selected = true;
            }
            return res;
          });
          if ($scope.singleSelect && $scope.options.length > 0) {
            return $scope.options[0].selected = true;
          }
        });
        $scope.$watchCollection('selected', function(nVal, oVal) {
          var res;
          res = _.map(nVal, function(o) {
            return o.name;
          });
          if ($scope.singleSelect) {
            return $scope.outputModel.value = res[0];
          } else {
            return $scope.outputModel.value = res;
          }
        });
        return $scope.$watchCollection('outputModel', function(nVal, oVal) {
          var nValues;
          if (nVal.value !== oVal.value) {
            if ($scope.singleSelect) {
              nValues = [nVal.value];
            } else {
              nValues = nVal.value;
            }
            return _.each($scope.options, function(v, k) {
              return v.selected = _.contains(nValues, v.name);
            });
          }
        });
      }
    };
  });


  /*
  .directive 'wdHierachySelect', () ->
    restrict: 'E'
    scope:
      inputModel: '=inputModel'
      outputModel: '=outputModel'
    templateUrl: './templates/directives/dir_hierarchy_select.html'
    controller: ($scope, $log) ->
      $scope.dynamicInput = {}
      updateInput = () ->
        $scope.dynamicInput = {
          name: $scope.inputModel.name
          values: $scope.inputModel.valueObj[$scope.selectedOpt]
          co_type: $scope.inputModel.co_type
        }
      updateInput()
  
      $scope.$watchCollection(
        'inputModel',
        (nVal, oVal) ->
          updateInput()
      )
      $scope.$watch(
        'selectedOpt',
        () ->
          updateInput()
      )
   */

}).call(this);

//# sourceMappingURL=directives.js.map
